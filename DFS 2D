//recursive
string h,v;
int n,m;
bool vis[21][21];
void dfs(int i,int j)
{
    vis[i][j]=1;
    if(h[i]=='>'&&j+1<m&&!vis[i][j+1]) dfs(i,j+1);
    if(h[i]=='<'&&j-1>=0&&!vis[i][j-1]) dfs(i,j-1);
    if(v[j]=='^'&&i-1>=0&&!vis[i-1][j]) dfs(i-1,j);
    if(v[j]=='v'&&i+1<n&&!vis[i+1][j]) dfs(i+1,j);
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    cin>>n>>m;
    cin>>h;
    cin>>v;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
        {
            memset(vis,0,sizeof(vis));
            dfs(i,j);
           for(int i1=0;i1<n;i1++)
            for(int j1=0;j1<m;j1++)
             if(!vis[i1][j1])
             {
                cout<<"NO";
                return 0;
             }
        }
    cout<<"YES";
}

//iterative
 int n,m;
    cin>>n>>m;
    string h;
    string v;
    cin>>h;
    cin>>v;
    
     stack<pii> s;
            s.push({i,j});
            bool vis[n+1][m+1];
            
            memset(vis,0,sizeof(vis));
            vis[i][j]=1;
            while(!s.empty())
            {
                pii u=s.top();
                s.pop();
                int x1=u.F,y1=u.S;
                if(h[x1]=='>'&&y1+1<m&&!vis[x1][y1+1])
                {
                    vis[x1][y1+1]=1;
                    s.push({x1,y1+1});
                }
                if(h[x1]=='<'&&y1-1>=0&&!vis[x1][y1-1])
                {
                    vis[x1][y1-1]=1;
                    s.push({x1,y1-1});
                }
                if(v[y1]=='v'&&x1+1<n&&!vis[x1+1][y1])
                {
                    vis[x1+1][y1]=1;
                    s.push({x1+1,y1});
                }
                if(v[y1]=='^'&&x1-1>=0&&!vis[x1-1][y1])
                {
                    vis[x1-1][y1]=1;
                    s.push({x1-1,y1});
                }
            }
//                
    

problem : strongly connected city(codeforces)


